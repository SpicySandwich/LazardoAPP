package com.client.LazardoClient.Validation;

import com.client.LazardoClient.Model.BuyerClientDetails;
import com.client.LazardoClient.Model.ClientLogin;
import com.client.LazardoClient.Model.SellerClientDetails;
import com.client.LazardoClient.ModelException.InvalidException;
import com.client.LazardoClient.ModelException.NotNullException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class CompileValidation {
	
		@Autowired
		private ClientInputValidation clientInputValidation;
		
		@Autowired
		private ClientRepoValidation clientRepoValidation;
		
		
	
	  public ClientLogin signUpValidation(ClientLogin clientLogin) {
		  
		  if(clientLogin.getUsername().equals(clientInputValidation.checkUsernameNotNullSignUp(clientLogin.getReTypeUsername())) == false)
	             throw new InvalidException("Username do not match");
		  clientRepoValidation.usernameValidationSignUp(clientLogin.getReTypeUsername());
		  if (clientLogin.getPassword().equals(clientInputValidation.checkPasswordFormatSignUp(clientLogin.getReTypePassword())) == false)
			  throw new InvalidException("Password do not match");
			  return clientLogin;
				}
	  
		public BuyerClientDetails checkBuyerDetails(BuyerClientDetails buyerClientDetails) {
			
			
			if (buyerClientDetails.getFirstname().isEmpty() ||
				buyerClientDetails.getLastname().isEmpty() || 
				clientInputValidation.checkEmailFormatSignUp(buyerClientDetails.getEmail())
					) throw new NotNullException("Please fill up all the field");	
			return buyerClientDetails;
		
			}
	
		public SellerClientDetails checkSellerDetails(SellerClientDetails sellerClientDetails) {
			
			if (sellerClientDetails.getFirstname().isEmpty() ||
				sellerClientDetails.getLastname().isEmpty() || 
				clientInputValidation.checkEmailFormatSignUp(sellerClientDetails.getEmail())
					)throw new NotNullException("Please fill up all the field");	
			return sellerClientDetails;
				
			}
		  
	//need Spring Security
	  public boolean signInValidation(String username, String password) {
			  
			  String pass =  clientRepoValidation.passwordValidationSignIn(username);
			  Integer totalAttempt = 4;
			
			  while(totalAttempt != 0) {
				  totalAttempt--;
				  if(password.equals(pass)) {
					  return  true; 
				  } 
				else {
					
					System.err.println("test: " + totalAttempt);
					
				//	throw new InvalidException("Login attempt " + totalAttempt +" for username " + username + ".");
				} 
				  
				  totalAttempt--;  
              }
			  totalAttempt--;
			  if(totalAttempt == 0)  throw new InvalidException("Reach the maximum attempt. The account is temporay unavailable");
			 
			  return false;
			  
		  }
		  
}
