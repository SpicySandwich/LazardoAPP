package com.client.LazardoClient.Validation;

import com.client.LazardoClient.DAO.ValidationRepo;
import com.client.LazardoClient.Model.BuyerClientDetails;
import com.client.LazardoClient.Model.SellerClientDetails;
import com.client.LazardoClient.ModelException.AlreadyExistException;
import com.client.LazardoClient.ModelException.InvalidException;
import com.client.LazardoClient.ModelException.NotNullException;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class ClientRepoValidation {
	
	@Autowired
	private ValidationRepo validationRepo;

	   public String usernameValidation(String username) {
		   boolean checkUser =  validationRepo.ifUsernameExist(username);
		   if(checkUser  == true) throw new AlreadyExistException("Username " + username + " already exist. Kindly create new one");
			return username;
		}
	   
       public Integer productIDValidation(Integer id) {
	   boolean checkid =  validationRepo.ifProductExist(id);
		if(checkid == false) throw new InvalidException("Product is not available");
		return id;
	}
	
	public boolean emailValidation(String email) {
		boolean checkEmail =  validationRepo.ifEmailExist(email);
		if(checkEmail == true) throw new AlreadyExistException("Email "+ email + " already exist. Kindly change");
		return checkEmail;
		
	}
	
		public void checkBuyerDetails(BuyerClientDetails buyerClientDetails) {
				
			if (buyerClientDetails.getFirstname().isEmpty() ||
				buyerClientDetails.getLastname().isEmpty() || 
				buyerClientDetails.getEmail().isEmpty() ||
				emailValidation(buyerClientDetails.getEmail()) 
					){
				throw new NotNullException("Please fill up all the field");	
			}
			}
	
		public void checkSellerDetails(SellerClientDetails sellerClientDetails) {
				
			}

}
